name: Obsidian E2E Test

on:
    workflow_dispatch:
    push:
        branches: ["main", "multiple-sandbox"]
    pull_request:
        branches: ["main", "multiple-sandbox"]

jobs:
    e2e-test:
        strategy:
            # 失敗しても他のジョブは継続するように設定
            fail-fast: false
            matrix:
                os: [windows-latest, macos-latest]

        runs-on: ${{ matrix.os }}
        timeout-minutes: 15

        steps:
            - name: Check out repository
              uses: actions/checkout@v4

            - name: Set up pnpm
              uses: pnpm/action-setup@v3
              with:
                  version: 8

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: "pnpm"

            - name: Install dependencies
              run: pnpm install

            - name: Install Playwright Browsers
              run: pnpm exec playwright install

            - name: Download Obsidian (Windows)
              if: runner.os == 'Windows'
              run: |
                  $OBSIDIAN_VERSION="1.9.12"
                  Invoke-WebRequest -Uri "https://github.com/obsidianmd/obsidian-releases/releases/download/v${OBSIDIAN_VERSION}/Obsidian-${OBSIDIAN_VERSION}.exe" -OutFile "Obsidian.exe"
                  # Playwright設定ファイルから参照される環境変数を設定
                  echo "OBSIDIAN_APP_PATH=${PWD}/Obsidian.exe" >> $env:GITHUB_ENV
              shell: pwsh

            - name: Download Obsidian (macOS)
              if: runner.os == 'macOS'
              run: |
                  OBSIDIAN_VERSION="1.9.12"
                  # macOS ARM64ランナー用にarm64版のDMGをダウンロード
                  curl -L "https://github.com/obsidianmd/obsidian-releases/releases/download/v${OBSIDIAN_VERSION}/Obsidian-${OBSIDIAN_VERSION}.dmg" -o "Obsidian.dmg"
                  hdiutil attach Obsidian.dmg
                  # Playwright設定ファイルから参照される環境変数を設定
                  echo "OBSIDIAN_APP_PATH=/Volumes/Obsidian/Obsidian.app" >> $GITHUB_ENV

            - name: Install jq (Windows)
              if: runner.os == 'Windows'
              run: choco install jq

            - name: Prepare E2E test environment
              run: bash e2e-setup.sh

            - name: Run Playwright tests
              run: pnpm playwright test src/e2e/sandbox-vault.spec.mts --project=electron
              env:
                  # デバッグ用にpw:browserログを有効化
                  DEBUG: "pw:browser"

            - name: Upload Playwright report
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: playwright-report-${{ matrix.os }}
                  path: playwright-report/
                  retention-days: 30
