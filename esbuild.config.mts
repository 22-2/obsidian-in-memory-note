import builtins from "builtin-modules";
import dotenv from "dotenv";
import esbuild from "esbuild";
import path from "path";
import process from "process";

import { copyPlugin } from "./copyPlugin.mts";
import manifest from "./manifest.json";
dotenv.config();

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

export type CopyPluginOptions = {
	opts: {
		src: string[];
		dest: string;
	}[];
};

const mode = process.argv[2];
const prod = mode === "production";
const e2e = mode === "e2e";
const e2eDev = mode === "e2e-dev";

const copyOpts = {
	opts: [
		{
			src: ["./styles.css", "./manifest.json", "./main.js"],
			dest: "./dist",
		},
	],
};

if (process.env.OBSIDIAN_SANDBOX_PATH)
	copyOpts.opts.push({
		src: ["./dist/styles.css", "./dist/manifest.json", "./dist/main.js"],
		dest:
			path.join(
				process.env.OBSIDIAN_SANDBOX_PATH!,
				".obsidian",
				"plugins",
				manifest.id
			) || "",
	});

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	define: {
		"process.env.NODE_ENV": prod ? '"production"' : '"development"',
		"process.env.BUILT_AT": JSON.stringify(
			new Intl.DateTimeFormat("ja-JP", {
				year: "numeric",
				month: "2-digit",
				day: "2-digit",
				weekday: "long",

				hour: "2-digit",
				minute: "2-digit",
				second: "2-digit",
				fractionalSecondDigits: 2,

				timeZone: "Asia/Tokyo",
				timeZoneName: "long",
			})
				.format(new Date())
				.replace(/[\\/:*?"<>|\s.]/g, "-")
		),
	},
	plugins: e2eDev || e2e ? [copyPlugin(copyOpts)] : [],
	entryPoints: ["src/main.ts"],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins,
	],
	format: "cjs",
	target: "esnext",
	logLevel: "info",
	minify: prod,
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outfile: "main.js",
});

if (prod || e2e) {
	await context.rebuild();
	process.exit(0);
} else {
	await context.watch();
}
